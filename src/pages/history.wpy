<style lang="less">
  .line-chart {
    width: 100%;
    height: 700rpx;
  }
  .name {
    font-size: 18rpx;
  }
  .price-wrap {
    position: relative;
    padding-left: 60%;
    padding-top: 10rpx;
  }
  .price {
    font-size: 32rpx;
    padding-left: 10rpx;
    font-weight: bold;
    color: #ff4422;
  }
  .picture {
    display: block;
    width: 300rpx;
    height: 300rpx;
    padding: 1.5%;
  }
  .commodity {
    margin-bottom: 10%;
  }
</style>

<template>
  <view class="container">
    <wxc-panel title="商品链接">
      <wxc-flex>
        <wxc-avatar class="picture" mold="square" src="{{commodity.imgUrl}}"></wxc-avatar>
        <wxc-flex dir="top">
          <view>
            <text class="name">{{commodity.name}}</text>
          </view>
          <view class="commodity">
            <wxc-label type="fill" type-color="#FF4040">京东</wxc-label>
            <wxc-price 
              class="price" 
              value="{{currentPrice}}" 
              decimal="small">
            </wxc-price>
          </view>
          <wxc-button size="small" type="success">去购买</wxc-button>
        </wxc-flex>
      </wxc-flex>
    </wxc-panel>
    <wxc-panel title="价格走势">
      <view class="price-wrap">
        <wxc-label type="fill" type-color="#FF4040">历史最低价:</wxc-label>
        <wxc-price 
          class="price" 
          value="{{lowestPrice}}" 
          decimal="small">
        </wxc-price>
      </view>
      <view class="line-chart">
        <ec-canvas 
          id="mychart-dom-bar" 
          canvas-id="mychart-bar" 
          ec="{{ec}}" 
          bind:init="echartInit">
        </ec-canvas>
      </view>
    </wxc-panel>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import echarts from '../ec-canvas/echarts'
  import {
    COMMODITY
  } from '../config/constant'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '商品历史价格',
      usingComponents: {
        'wxc-flex': '../packages/@minui/wxc-flex/dist/index',
        'wxc-panel': '../packages/@minui/wxc-panel/dist/index',
        'wxc-price': '../packages/@minui/wxc-price/dist/index',
        'wxc-label': '../packages/@minui/wxc-label/dist/index',
        'wxc-avatar': '../packages/@minui/wxc-avatar/dist/index',
        'wxc-elip': '../packages/@minui/wxc-elip/dist/index',
        'wxc-button': '../packages/@minui/wxc-button/dist/index',
        'ec-canvas': '../ec-canvas/ec-canvas'
      }
    }
    data = {
      currentPrice: 0,
      lowestPrice: 0,
      commodity: {},
      ec: {}
    }
    methods = {
      echartInit(e) {
        this.initChart(e.detail.canvas, e.detail.width, e.detail.height)
      }
    }
    initChart(canvas, width, height) {
      // 价格数组
      let prices = []
      // 日期数组
      let dates = []
      let lowestPrice = 2 << 20
      if (this.commodity.prices) {
        this.commodity.prices.forEach(e => {
          if (e.price < lowestPrice) {
            lowestPrice = e.price
          }
          prices.push(e.price)
          dates.push(e.date)
        })
      } else {
        lowestPrice = 0
      }
      // 历史最低价
      this.lowestPrice = lowestPrice
      // 当前价格
      this.currentPrice = prices[prices.length - 1]

      const chart = echarts.init(canvas, null, {
        width: width,
        height: height
      })
      canvas.setChart(chart)
      const option = {
        title: {
          text: '',
          left: 'left'
        },
        color: ["#37A2DA"],
        legend: {
          data: ['京东'],
          top: 50,
          left: 'center',
          backgroundColor: '#F5F5DC',
          z: 100
        },
        grid: {
          containLabel: true
        },
        tooltip: {
          show: true,
          trigger: 'axis'
        },
        xAxis: {
          type: 'category',
          boundaryGap: false,
          data: dates,
        },
        yAxis: {
          x: 'center',
          type: 'value',
          splitLine: {
            lineStyle: {
              type: 'dashed'
            }
          }
        },
        series: [{
          name: '京东',
          type: 'line',
          smooth: true,
          data: prices
        }]
      };
      chart.setOption(option)
      return chart
    }
    onLoad(params, data) {
      this.commodity = data.preload.commodity
    }
  }
</script>
